{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RYZEN 5\\\\Desktop\\\\Proyecto3w\\\\codesoft\\\\front\\\\src\\\\components\\\\sidebar\\\\sidebar.js\";\nimport React, { useState, useEffect } from 'react';\nimport * as s from './sidebar.styles';\n\nconst Sidebar = props => {\n  const {\n    backgroundImage = '',\n    SidebarHeader = '',\n    menuItems = [],\n    fonts = {\n      header: '',\n      menu: ''\n    }\n  } = props; //state\n\n  const [selected, setSelectedMenuItem] = useState(menuItems[0].name);\n  const [isSidebarOpen, setSidebarState] = useState(true);\n\n  const handleMenuItemClick = name => {\n    setSelectedMenuItem(name);\n  }; //update sidebar state\n\n\n  useEffect(() => {\n    const updateWindowWidth = () => {\n      if (window.innerWidth < 1280 && isSidebarOpen) setSidebarState(false);else setSidebarState(true);\n    };\n\n    window.addEventListener('resize', updateWindowWidth);\n    return () => window.removeEventListener('resize', updateWindowWidth);\n  }, [isSidebarOpen]);\n  const menuItemsJSX = menuItems.map((item, index) => {\n    const isItemSelected = selected === item.name;\n    return /*#__PURE__*/React.createElement(s.MenuItem, {\n      key: index,\n      font: fonts.menu,\n      selected: isItemSelected,\n      onClick: () => handleMenuItemClick(item.name),\n      isSidebarOpen: isSidebarOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(s.Icon, {\n      isSidebarOpen: isSidebarOpen,\n      src: item.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(s.Text, {\n      isSidebarOpen: isSidebarOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, item.name));\n  });\n  return /*#__PURE__*/React.createElement(s.SidebarContainer, {\n    backgroundImage: backgroundImage,\n    isSidebarOpen: isSidebarOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(s.SidebarHeader, {\n    font: fonts.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: process.env.PUBLIC_URL + SidebarHeader,\n    width: \"80%\",\n    height: \"80%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 51\n    }\n  })), /*#__PURE__*/React.createElement(s.MenuItemContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, menuItemsJSX), /*#__PURE__*/React.createElement(s.TogglerContainer, {\n    onClick: () => setSidebarState(!isSidebarOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(s.Toggler, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Sidebar;","map":{"version":3,"sources":["C:/Users/RYZEN 5/Desktop/Proyecto3w/codesoft/front/src/components/sidebar/sidebar.js"],"names":["React","useState","useEffect","s","Sidebar","props","backgroundImage","SidebarHeader","menuItems","fonts","header","menu","selected","setSelectedMenuItem","name","isSidebarOpen","setSidebarState","handleMenuItemClick","updateWindowWidth","window","innerWidth","addEventListener","removeEventListener","menuItemsJSX","map","item","index","isItemSelected","icon","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as s from './sidebar.styles';\r\n\r\n\r\n\r\n\r\nconst Sidebar = props => {\r\n    const {\r\n        backgroundImage = '',\r\n        SidebarHeader = '',\r\n        menuItems = [],\r\n        fonts = {\r\n            header: '',\r\n            menu: ''\r\n        },\r\n    } = props;\r\n\r\n    //state\r\n    const [selected, setSelectedMenuItem] = useState(menuItems[0].name);\r\n    const [isSidebarOpen, setSidebarState] = useState(true);\r\n\r\n\r\n    const handleMenuItemClick = name => {\r\n        setSelectedMenuItem(name)\r\n    }\r\n\r\n    //update sidebar state\r\n    useEffect(() => {\r\n        const updateWindowWidth = () => {\r\n          if (window.innerWidth < 1280 && isSidebarOpen) setSidebarState(false);\r\n          else setSidebarState(true)\r\n        }\r\n    \r\n        window.addEventListener('resize', updateWindowWidth);\r\n    \r\n        return () => window.removeEventListener('resize', updateWindowWidth);\r\n      }, [isSidebarOpen]);\r\n\r\n    const menuItemsJSX = menuItems.map((item, index) => {\r\n        const isItemSelected = selected === item.name;\r\n        return (\r\n            <s.MenuItem\r\n                key={index}\r\n                font={fonts.menu}\r\n                selected={isItemSelected}\r\n                onClick={()=> handleMenuItemClick(item.name)}\r\n                isSidebarOpen={isSidebarOpen}\r\n            >\r\n                <s.Icon isSidebarOpen={isSidebarOpen} src={item.icon}></s.Icon>\r\n                <s.Text isSidebarOpen={isSidebarOpen}>{item.name}</s.Text>\r\n            </s.MenuItem>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <s.SidebarContainer backgroundImage={backgroundImage} isSidebarOpen={isSidebarOpen}>\r\n            <s.SidebarHeader font={fonts.header}>{<img src={process.env.PUBLIC_URL + SidebarHeader} width=\"80%\" height=\"80%\"></img>}</s.SidebarHeader>\r\n            <s.MenuItemContainer>{menuItemsJSX}</s.MenuItemContainer>\r\n            <s.TogglerContainer onClick={()=> setSidebarState(!isSidebarOpen)}>\r\n                <s.Toggler />\r\n            </s.TogglerContainer>\r\n        </s.SidebarContainer>\r\n    )\r\n}\r\n\r\nexport default Sidebar"]},"metadata":{},"sourceType":"module"}