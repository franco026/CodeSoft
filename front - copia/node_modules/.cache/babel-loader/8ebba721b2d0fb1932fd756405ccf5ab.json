{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Documents\\\\practicas\\\\CodeSoft2\\\\Front\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'; // Archivo CSS de Bootstrap 4 \n\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\nimport './global.scss';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducer from './store/reduce/auth';\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst initialState = {\n  token: null,\n  error: null,\n  loading: false,\n  authenticate: null,\n  usuario: null\n};\n\nfunction loadFromLocalStorage() {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) return initialState;\n    return serializedState;\n  } catch (e) {\n    console.log(e);\n    return initialState;\n  }\n}\n\nconst persistedState = loadFromLocalStorage();\nconst store = createStore(reducer, composeEnhances(persistedState, applyMiddleware(thunk)));\nconst app = /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }\n}));\nReactDOM.render(app, document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/franc/Documents/practicas/CodeSoft2/Front/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","compose","applyMiddleware","Provider","thunk","reducer","composeEnhances","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","initialState","token","error","loading","authenticate","usuario","loadFromLocalStorage","serializedState","localStorage","getItem","e","console","log","persistedState","store","app","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAO,sDAAP,C,CAA+D;;AAC/D,OAAO,oDAAP;AACA,OAAO,eAAP;AAIA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,MAAMC,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CP,OAAvE;AAEA,MAAMQ,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,YAAY,EAAE,IAJK;AAKnBC,EAAAA,OAAO,EAAE;AALU,CAArB;;AAQA,SAASC,oBAAT,GAAgC;AAC9B,MAAI;AACA,UAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;AACA,QAAIF,eAAe,KAAK,IAAxB,EAA8B,OAAOP,YAAP;AAC9B,WAAOO,eAAP;AACH,GAJD,CAIE,OAAOG,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAOV,YAAP;AACH;AACF;;AAED,MAAMa,cAAc,GAAGP,oBAAoB,EAA3C;AAEA,MAAMQ,KAAK,GAAGvB,WAAW,CAACK,OAAD,EAAUC,eAAe,CAC9CgB,cAD8C,EAE9CpB,eAAe,CAACE,KAAD,CAF+B,CAAzB,CAAzB;AAMA,MAAMoB,GAAG,gBACP,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACM,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADN,CADF;AAKA1B,QAAQ,CAAC4B,MAAT,CAAgBD,GAAhB,EAAoBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,E,CAEA;AACA;AACA;;AACA5B,aAAa,CAAC6B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'; // Archivo CSS de Bootstrap 4 \nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\nimport './global.scss';\n\n\n\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport reducer from './store/reduce/auth';\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst initialState = {\n  token: null,\n  error: null,\n  loading: false,\n  authenticate: null,\n  usuario: null\n}\n\nfunction loadFromLocalStorage() {\n  try {\n      const serializedState = localStorage.getItem('state')\n      if (serializedState === null) return initialState\n      return serializedState\n  } catch (e) {\n      console.log(e)\n      return initialState\n  }\n}\n\nconst persistedState = loadFromLocalStorage()\n\nconst store = createStore(reducer, composeEnhances(\n    persistedState,\n    applyMiddleware(thunk)\n));\n\n\nconst app = (\n  <Provider store={store}>\n        <App />\n  </Provider>\n)\nReactDOM.render(app,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}