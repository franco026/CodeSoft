{"ast":null,"code":"import * as actionType from './types';\nimport axios from 'axios';\nexport const authStart = () => {\n  return {\n    type: actionType.AUTH_START\n  };\n};\nexport const authSuccess = token => {\n  return {\n    type: actionType.AUTH_SUCCESS,\n    token: token\n  };\n};\nexport const authFail = () => {\n  return {\n    type: actionType.AUTH_FAIL\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('userName');\n  return {\n    type: actionType.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTime = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authLogin = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post('/token-auth/', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      email: email,\n      password: password\n    }).then(res => {\n      const token = res.data.token;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('userName', res.data.user.username);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTime(3600));\n    }).catch(err => {\n      dispatch(authFail());\n      dispatch(errorMessage(err.response.data, err.response.status));\n    });\n  };\n};\nexport const authSignUp = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    let data = JSON.stringify({\n      email: email,\n      username: username,\n      password: password1\n    });\n    axios.post('/accounts/users/', data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(res);\n      const token = res.data.token;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('userName', res.data.username);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTime(3600));\n    }).catch(err => {\n      dispatch(authFail());\n      dispatch(errorMessage(err.response.data, err.response.status));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTime((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};\nexport const errorMessage = (msg, status) => {\n  return {\n    type: actionType.ERROR_LEAD,\n    payload: {\n      msg,\n      status\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/franc/Documents/practicas/CodeSoft2/Front/src/store/action/auth.js"],"names":["actionType","axios","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTime","expirationTime","dispatch","setTimeout","authLogin","email","password","post","headers","then","res","data","expirationDate","Date","getTime","setItem","user","username","catch","err","errorMessage","response","status","authSignUp","password1","password2","JSON","stringify","console","log","authCheckState","getItem","undefined","msg","ERROR_LEAD","payload"],"mappings":"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","sourcesContent":["import * as actionType from './types'\r\nimport axios from 'axios';\r\nexport const authStart = () =>{\r\n    return {\r\n        type:actionType.AUTH_START\r\n    }\r\n}  \r\nexport const authSuccess = (token) =>{\r\n    return {\r\n        type : actionType.AUTH_SUCCESS,\r\n        token : token\r\n    }\r\n}  \r\nexport const authFail = ()=>{\r\n    return {\r\n        type:actionType.AUTH_FAIL,\r\n    }\r\n}\r\nexport const logout = () =>{\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('expirationDate')\r\n    localStorage.removeItem('userName')\r\n    return {\r\n        type:actionType.AUTH_LOGOUT\r\n    }\r\n}  \r\nexport const checkAuthTime = expirationTime =>{\r\n    return dispatch=>{\r\n        setTimeout(()=>{\r\n            dispatch(logout())\r\n        },expirationTime * 1000)\r\n    }\r\n}\r\nexport const authLogin = (email, password) =>{\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        axios.post('/token-auth/',{\r\n            headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n        email:email,\r\n        password:password})\r\n        .then(res=>{\r\n            const token = res.data.token;\r\n            const expirationDate = new Date(new Date().getTime()+3600 * 1000)\r\n            localStorage.setItem('token',token)\r\n            localStorage.setItem('expirationDate',expirationDate)\r\n            localStorage.setItem('userName',res.data.user.username)\r\n            dispatch(authSuccess(token))\r\n            dispatch(checkAuthTime(3600))\r\n        })\r\n        .catch(err =>{\r\n            dispatch(authFail())\r\n            dispatch(errorMessage(err.response.data, err.response.status))\r\n        })\r\n    }\r\n}\r\nexport const authSignUp = (username, email, password1, password2) =>{\r\n    return dispatch => { \r\n        dispatch(authStart());\r\n        let data = JSON.stringify({\r\n            email:email,\r\n            username:username,\r\n            password:password1\r\n        })\r\n        axios.post('/accounts/users/',data,{\r\n            headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        .then(res=>{\r\n            console.log(res)\r\n            const token = res.data.token;\r\n            const expirationDate = new Date(new Date().getTime()+3600 * 1000)\r\n            localStorage.setItem('token',token)\r\n            localStorage.setItem('expirationDate',expirationDate)\r\n            localStorage.setItem('userName',res.data.username)\r\n            dispatch(authSuccess(token))\r\n            dispatch(checkAuthTime(3600))\r\n        })\r\n        .catch(err =>{\r\n            dispatch(authFail())\r\n            dispatch(errorMessage(err.response.data, err.response.status))\r\n        })\r\n    }\r\n}\r\nexport const authCheckState = ()=>{\r\n    return dispatch=>{      \r\n        const token = localStorage.getItem('token')\r\n        if (token === undefined){\r\n            dispatch(logout())\r\n        }\r\n        else{\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n            if (expirationDate<=new Date()){\r\n                dispatch(logout())\r\n            }\r\n            else{\r\n                dispatch(authSuccess(token))\r\n                dispatch(checkAuthTime((expirationDate.getTime() - new Date().getTime()) /1000 ))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const errorMessage= (msg, status)=>{\r\n    return{\r\n        type:actionType.ERROR_LEAD,\r\n        payload: {msg,status}\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}