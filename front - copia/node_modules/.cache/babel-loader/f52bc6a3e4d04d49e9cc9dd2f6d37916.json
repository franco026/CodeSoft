{"ast":null,"code":"import axios from 'axios';\nimport * as actionType from '../action/types';\nexport const authStart = () => {\n  return {\n    type: actionType.AUTH_START\n  };\n};\nexport const authSuccess = token => {\n  return {\n    type: actionType.AUTH_SUCCESS,\n    token: token\n  };\n};\nexport const authFail = () => {\n  return {\n    type: actionType.AUTH_FAIL\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('userName');\n  return {\n    type: actionType.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTime = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post('http://localhost:8000/token-auth/', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      username: username,\n      password: password\n    }).then(res => {\n      const token = res.data.token;\n      console.log(token);\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTime(3600));\n    }).catch(err => {\n      dispatch(authFail());\n    });\n  };\n};\nexport const authSignUp = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    let data = JSON.stringify({\n      email: email,\n      username: username,\n      password: password1\n    });\n    axios.post('/accounts/users/', data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(res);\n      const token = res.data.token;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('userName', res.data.username);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTime(3600));\n    }).catch(err => {\n      dispatch(authFail());\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTime((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/franc/Documents/practicas/CodeSoft2/Front/src/store/action/auth.js"],"names":["axios","actionType","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTime","expirationTime","dispatch","setTimeout","authLogin","username","password","post","headers","then","res","data","console","log","expirationDate","Date","getTime","setItem","catch","err","authSignUp","email","password1","password2","JSON","stringify","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport * as actionType from '../action/types';\r\nexport const authStart = () =>{\r\n    return {\r\n        type:actionType.AUTH_START\r\n    }\r\n}  \r\nexport const authSuccess = (token) =>{\r\n    return {\r\n        type : actionType.AUTH_SUCCESS,\r\n        token : token\r\n    }\r\n}  \r\nexport const authFail = ()=>{\r\n    return {\r\n        type:actionType.AUTH_FAIL,\r\n    }\r\n}\r\nexport const logout = () =>{\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('expirationDate')\r\n    localStorage.removeItem('userName')\r\n    return {\r\n        type:actionType.AUTH_LOGOUT\r\n    }\r\n}  \r\nexport const checkAuthTime = expirationTime =>{\r\n    return dispatch=>{\r\n        setTimeout(()=>{\r\n            dispatch(logout())\r\n        },expirationTime * 1000)\r\n    }\r\n}\r\nexport const authLogin = (username, password) =>{\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        axios.post('http://localhost:8000/token-auth/',{\r\n            headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n        username:username,\r\n        password:password})\r\n        .then(res=>{\r\n            const token = res.data.token;\r\n            console.log(token)\r\n            const expirationDate = new Date(new Date().getTime()+3600 * 1000)\r\n            localStorage.setItem('token',token)\r\n            localStorage.setItem('expirationDate',expirationDate)\r\n            dispatch(authSuccess(token))\r\n            dispatch(checkAuthTime(3600))\r\n            \r\n        })\r\n        .catch(err =>{\r\n            dispatch(authFail())\r\n        })\r\n    }\r\n}\r\nexport const authSignUp = (username, email, password1, password2) =>{\r\n    return dispatch => { \r\n        dispatch(authStart());\r\n        let data = JSON.stringify({\r\n            email:email,\r\n            username:username,\r\n            password:password1\r\n        })\r\n        axios.post('/accounts/users/',data,{\r\n            headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        .then(res=>{\r\n            console.log(res)\r\n            const token = res.data.token;\r\n            const expirationDate = new Date(new Date().getTime()+3600 * 1000)\r\n            localStorage.setItem('token',token)\r\n            localStorage.setItem('expirationDate',expirationDate)\r\n            localStorage.setItem('userName',res.data.username)\r\n            dispatch(authSuccess(token))\r\n            dispatch(checkAuthTime(3600))\r\n        })\r\n        .catch(err =>{\r\n            dispatch(authFail())\r\n        })\r\n    }\r\n}\r\nexport const authCheckState = ()=>{\r\n    return dispatch=>{      \r\n        const token = localStorage.getItem('token')\r\n        if (token === undefined){\r\n            dispatch(logout())\r\n        }\r\n        else{\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n            if (expirationDate<=new Date()){\r\n                dispatch(logout())\r\n            }\r\n            else{\r\n                dispatch(authSuccess(token))\r\n                dispatch(checkAuthTime((expirationDate.getTime() - new Date().getTime()) /1000 ))\r\n            }\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}